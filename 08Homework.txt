.headers on
.mode column

.print
.print Marcela Gomez
.print Homework 8, CSS 475, Winter 2019
.print

.print
.print #1 Create tables from bank schema
.print

CREATE TABLE Customer (
	ID            INTEGER  not null,
	CustNumber    VARCHAR[10] not null UNIQUE,
	FirstName     VARCHAR[30] not null,
	MiddleName    VARCHAR[30],
	LastName      VARCHAR[30] not null, 
	Email         VARCHAR[50] not null,
	Primary Key  (ID)
);

CREATE TABLE CustAccount (

	CustId        INTEGER  not null,
	AccountId     INTEGER  not null,
	
	Primary Key (CustId, AccountId),
	Foreign Key (CustId) references CustAccount (AccountId),
	Foreign Key (AccountId) references CustAccount(CustId)
);

CREATE TABLE AcctType (

	ID    VARCHAR[2] not null,
	Name  VARCHAR[10] not null,
	
	Primary Key (ID)
);


CREATE TABLE TxType (

	ID    INTEGER  not null,
	Description  VARCHAR[30] not null,
	
	Primary Key (ID)
);

CREATE TABLE Account (
	ID            	INTEGER  not null,
	AcctNum    	VARCHAR[10] not null UNIQUE,
	AcctTypeID   	VARCHAR[2],
	Balance	 INTEGER  CHECK(Balance >= 0),
	
	Primary Key  (ID)
);

CREATE TABLE AcctTransaction (
	ID            	INTEGER  not null,
	AccountID     	INTEGER  not null,
	TxTypeId	INTEGER  not null,
	Amount    	INTEGER  not null,
	TxDate   	Date,
	Note		VARCHAR[60],
	
	Primary Key  (ID),
	Foreign Key  (AccountID) references AcctTransaction (ID)
);

.schema

.print
.print #2 Create account types.
.print

INSERT INTO AcctType(ID, Name)
VALUES  ('C', 'Checking'),
	('S', 'Savings'),
        ('M', 'Money Market'),
	('BR', 'Brokerage');

SELECT * FROM AcctType;


.print
.print #3 Create TXType of:
.print

 
INSERT INTO TxType(Description)
VALUES  ('Deposit'),
	('Withdrawal'),
        ('Transfer In'),
	('Transfer Out');

.width 5, 12
SELECT * FROM TxType;

.print
.print #4 Create Four customers:
.print

INSERT INTO Customer(CustNumber, FirstName,MiddleName, LastName, Email)
VALUES  ('100001', 'Mary', 'Adams', 'Smith', 'ma@gmail.com'),
	('100002', 'John', 'Quincy', 'Smith', 'jq@gmail.com'),
	('100003', 'Sam', NULL, 'Space', 'pi@gmail.com'),
	('100004', 'Mary', 'Adams', 'Smith', 'MAS@gmail.com');

SELECT * FROM Customer ORDER BY CustNumber ASC;

.print
.print #5 Create Accounts for Customers:
.print

INSERT INTO Account (AcctNum, AcctTypeId, Balance)
VALUES 	('A001', 'C', 0),
	('A002', 'C', 0),
	('A003', 'BR', 0),
	('A004', 'M', 0),
	('A005', 'C', 0),
	('A006', 'S', 0),
	('A007', 'C', 0);

INSERT INTO CustAccount(CustID, AccountID)
VALUES (1, 1),
(2, 1),
(2, 2),
(1, 3),
(3, 4),
(3, 5),
(4, 6),
(4, 7);


Select c.ID, c.CustNumber, ca.AccountID, a.AcctTypeId, a.AcctNum, a.Balance
FROM Customer c, CustAccount ca, Account a
WHERE c.ID  = ca.CustId AND ca.AccountID= a.ID;

.print
.print #6 Create the following AcctTransactions
.print

INSERT INTO AcctTransaction(AccountID, TxTypeIdINTEGER, Amount, TxDate)
VALUES (1, 1, 1000, 'now'),
	(2, 1, 1000, 'now'),
	(3, 1, 1000, 'now'),
	(4, 1, 1000, 'now'),
	(5, 1, 1000, 'now'),
	(6, 1, 1000, 'now');





UPDATE Account
Set Balance = 0 + 1000
WHERE ID = 1 and AcctNum = 'A001';

UPDATE Account
Set Balance = 0 + 1000
WHERE ID = 2 and AcctNum = 'A002';

UPDATE Account
Set Balance = 0 + 1000
WHERE AcctNum = 'A003';
 
UPDATE Account
Set Balance = 0 + 1000
WHERE AcctNum = 'A004';

UPDATE Account
Set Balance = 0 + 1000
WHERE AcctNum = 'A005';

UPDATE Account
Set Balance = 0 + 1000
WHERE AcctNum = 'A006';


SELECT * FROM Account;

.print
.print #7 Withdraw $500 from A002
.print

INSERT INTO AcctTransaction(AccountID, TxTypeIdINTEGER, AMOUNT, TxDate)
VALUES (2, 2, 500, 'now');

UPDATE Account
Set Balance = 1000 - 500
WHERE AcctNum = 'A002';

Select c.ID, c.CustNumber, ca.AccountID, a.AcctTypeId, a.AcctNum, a.Balance
FROM Customer c, CustAccount ca, Account a
WHERE c.ID  = ca.CustId AND ca.AccountID= a.ID;

  

.print
.print#8 Transfer $300 from A002 to A001.
.print


INSERT INTO AcctTransaction(AccountID, TxTypeIdINTEGER, AMOUNT, TxDate)
VALUES (2, 4, 300, 'now'),
	(1, 3, 300, 'now');

UPDATE Account
SET Balance = 500-300
WHERE ID = 2 AND AcctNum = 'A002';

UPDATE Account
SET Balance = 1000 + 300
WHERE ID = 1 AND AcctNum = 'A001';

Select c.ID, c.CustNumber, ca.AccountID, a.AcctTypeId, a.AcctNum, a.Balance
FROM Customer c, CustAccount ca, Account a
WHERE c.ID  = ca.CustId AND ca.AccountID= a.ID;

.print
.print #9 attempting to directly subtract $300 from Account A002.  This should fail.
.print

UPDATE Account
SET Balance = 200 - 300
WHERE ID = 2 AND AcctNum = 'A002';
